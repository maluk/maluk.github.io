{"version":3,"sources":["components/calculatorcomponent.js","App.js","serviceWorker.js","index.js"],"names":["CalculatorComponent","props","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","maximumFractionDigits","handlechange","bind","handleSatusClick","handleYearClick","state","income","status","year","calculation","calculate","event","this","setState","target","value","textContent","className","useClasses","root","noValidate","autoComplete","Grid","container","spacing","item","xs","Typography","variant","align","FormControl","fullWidth","margin","InputLabel","htmlFor","OutlinedInput","id","onChange","startAdornment","InputAdornment","position","labelWidth","type","fontSize","Table","size","TableBody","TableRow","TableCell","Chip","clickable","label","onClick","color","TableHead","colSpan","fontWeight","format","fed","taxableAmount","tax","social","medicare","totals","netMonthly","net","React","Component","useStyles","makeStyles","theme","paper","marginTop","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","App","classes","createMuiTheme","typography","ThemeProvider","Container","component","maxWidth","CssBaseline","Avatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.9d92c237.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nimport { ButtonGroup, Chip, InputLabel, FormControl, Container, CssBaseline, Avatar, Typography, TextField, Button, Grid, Table, TableHead, TableRow, TableBody, TableCell, InputAdornment, OutlinedInput } from '@material-ui/core';\r\nimport { calculate } from '../util/calcutil'\r\n\r\nclass CalculatorComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumFractionDigits: 0,\r\n            maximumFractionDigits: 0\r\n          });\r\n\r\n        this.handlechange = this.handlechange.bind(this);\r\n        this.handleSatusClick = this.handleSatusClick.bind(this);\r\n        this.handleYearClick = this.handleYearClick.bind(this);\r\n\r\n        this.state = {\r\n            income : 100000,\r\n            status : 'm',\r\n            year : '2019',\r\n            state : 'CA',\r\n            calculation : calculate(100000, 'm', '2019', 'CA')\r\n        };\r\n    }\r\n\r\n    handlechange(event) {\r\n        this.setState({\r\n            income : event.target.value,\r\n            calculation : calculate(event.target.value, this.state.status, this.state.year, this.state.state)\r\n        });\r\n    }\r\n\r\n    handleSatusClick(event) {\r\n        const status = event.target.textContent == 'Single' ? 's' : 'm';\r\n        this.setState({\r\n             status : status,\r\n             calculation : calculate(this.state.income, status, this.state.year, this.state.state)\r\n            });\r\n    }\r\n\r\n    handleYearClick(event) {\r\n        const year = event.target.textContent;\r\n        this.setState({\r\n            year : year,\r\n            calculation : calculate(this.state.income, this.state.status, year, this.state.state)\r\n        });\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <form className={this.props.useClasses.root} noValidate autoComplete=\"off\">\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" align={'center'}>US Income Tax Calculator</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControl fullWidth className={this.props.useClasses.margin} variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">Annual Income Amount</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-income-amount\"\r\n                            value={this.state.income}\r\n                            onChange={this.handlechange}\r\n                            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                            labelWidth={200}\r\n                            type=\"number\"\r\n                            style={{fontSize: '2em'}}\r\n                        />\r\n                    </FormControl>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Table size=\"small\">\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Status</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            clickable\r\n                                            label=\"Single\"\r\n                                            onClick={this.handleSatusClick}\r\n                                            color={this.state.status == 's' ? 'secondary' : ''}\r\n                                        />\r\n                                        &nbsp;\r\n                                        <Chip\r\n                                            variant=\"outlined\"\r\n                                            clickable\r\n                                            label=\"Married\"\r\n                                            onClick={this.handleSatusClick}\r\n                                            color={this.state.status == 'm' ? 'secondary' : ''}\r\n                                        />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Year</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        clickable\r\n                                        label=\"2019\"\r\n                                        onClick={this.handleYearClick}\r\n                                        color=\"secondary\"\r\n                                        color={this.state.year == '2019' ? 'secondary' : ''}\r\n                                    />\r\n                                    {/* &nbsp;\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        clickable\r\n                                        label=\"2020\"\r\n                                        onClick={this.handleYearClick}\r\n                                        color={this.state.year == '2020' ? 'secondary' : ''}\r\n                                    /> */}\r\n                                </TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>State</TableCell>\r\n                                <TableCell align=\"right\">\r\n                                    <Chip\r\n                                        variant=\"outlined\"\r\n                                        clickable\r\n                                        label=\"CA\"\r\n                                        color=\"secondary\"\r\n                                    />\r\n                                </TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Table size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} style={{fontWeight : 600}}>Federal Taxes</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            <TableRow>\r\n                                <TableCell>Taxable Income</TableCell>\r\n                                <TableCell align=\"right\">{this.formatter.format(this.state.calculation.fed.taxableAmount)}</TableCell>\r\n                            </TableRow>                            <TableRow>\r\n                                <TableCell>Federal Tax</TableCell>\r\n                                <TableCell align=\"right\">{this.formatter.format(this.state.calculation.fed.tax)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} style={{fontWeight : 600}}>FICA</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Social Security</TableCell>\r\n                                <TableCell align=\"right\">{this.formatter.format(this.state.calculation.social)}</TableCell>\r\n                            </TableRow>                            <TableRow>\r\n                                <TableCell>Medicare</TableCell>\r\n                                <TableCell align=\"right\">{this.formatter.format(this.state.calculation.medicare)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} style={{fontWeight : 600}}>California State Taxes</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Taxable Income</TableCell>\r\n                                <TableCell align=\"right\">{this.formatter.format(this.state.calculation.state.taxableAmount)}</TableCell>\r\n                            </TableRow>                            <TableRow>\r\n                                <TableCell>State Tax</TableCell>\r\n                                <TableCell align=\"right\">{this.formatter.format(this.state.calculation.state.tax)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} style={{fontWeight : 600}}>Totals</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Total Tax</TableCell>\r\n                                <TableCell align=\"right\">{this.formatter.format(this.state.calculation.totals.tax)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Monthly Take Home</TableCell>\r\n                                <TableCell align=\"right\">{this.formatter.format(this.state.calculation.totals.netMonthly)}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell style={{fontWeight : 600, fontSize: '1.1em'}}>Annual Take Home</TableCell>\r\n                                <TableCell style={{fontWeight : 600, fontSize: '1.1em'}} align=\"right\">{this.formatter.format(this.state.calculation.totals.net)}</TableCell>\r\n                            </TableRow>\r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default CalculatorComponent;\r\n","import React from 'react';\nimport './App.css';\nimport { Container, CssBaseline, Avatar, Typography, TextField, Button, ThemeProvider } from '@material-ui/core';\nimport MonetizationOnRoundedIcon from '@material-ui/icons/MonetizationOnRounded';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport CalculatorComponent from './components/calculatorcomponent';\nimport 'fontsource-roboto';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n\nfunction App() {\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    typography: {\n      fontSize: 16,\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <MonetizationOnRoundedIcon />\n            </Avatar>\n            <CalculatorComponent useClasses={classes}/>\n          </div>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}