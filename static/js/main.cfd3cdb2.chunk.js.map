{"version":3,"sources":["util/calcutil.js","components/calculatorcomponent.js","App.js","serviceWorker.js","index.js"],"names":["w","s","0","p","9700","39475","84200","160725","204100","510300","1000000","m","19400","78950","168400","321450","408200","612350","dedcution","calculate","g","status","fed","taxableAmount","tax","b","Object","keys","console","log","i","length","Math","round","calculateFed","income","totals","net","netMonthly","CalculatorComponent","props","handlechange","bind","state","event","this","setState","target","value","className","useClasses","root","noValidate","autoComplete","Grid","container","spacing","item","xs","Typography","variant","align","FormControl","fullWidth","margin","InputLabel","htmlFor","OutlinedInput","id","onChange","startAdornment","InputAdornment","position","labelWidth","type","Table","size","TableHead","TableRow","TableCell","colSpan","style","fontWeight","TableBody","React","Component","useStyles","makeStyles","theme","paper","marginTop","display","flexDirection","alignItems","avatar","backgroundColor","palette","secondary","main","form","width","submit","App","classes","createMuiTheme","typography","fontSize","ThemeProvider","Container","component","maxWidth","CssBaseline","Avatar","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.cfd3cdb2.chunk.js","sourcesContent":["const w = {\r\n    s : { // Single\r\n        0       : { p : 0.1,  s : 0 },\r\n        9700    : { p : 0.12, s : 970 },\r\n        39475   : { p : 0.22, s : 4543 },\r\n        84200   : { p : 0.24, s : 14382 },\r\n        160725  : { p : 0.32, s : 32748 },\r\n        204100  : { p : 0.35, s : 46628 },\r\n        510300  : { p : 0.37, s : 153798 },\r\n        1000000 : { p : 0.37, s : 334987 }\r\n    },\r\n    m : { // Married\r\n        0       : { p : 0.1,  s : 0 },\r\n        19400   : { p : 0.12, s : 1940 },\r\n        78950   : { p : 0.22, s : 9086 },\r\n        168400  : { p : 0.24, s : 28765 },\r\n        321450  : { p : 0.32, s : 65497 },\r\n        408200  : { p : 0.35, s : 93257 },\r\n        612350  : { p : 0.37, s : 164709 },\r\n        1000000 : { p : 0.37, s : 226569 }\r\n    }\r\n}\r\n\r\nconst dedcution = {\r\n    s : 12200,\r\n    m: 24400\r\n}\r\n\r\nconst calculateFed = (g, status) => {\r\n    g -= dedcution[status];\r\n\r\n    var taxableAmount = g;\r\n\r\n    if (g < 0) {\r\n        return {tax: 0, taxableAmount: 0};\r\n    }\r\n\r\n    var b = Object.keys(w[status]);\r\n    console.log(b);\r\n\r\n    for (var i = 0; i < b.length; i++) { // Find bracket\r\n        if (b[i] > g || b[i] == 1000000)  {\r\n            g -= b[i-1]; // Get taxable income\r\n            b = w[status][b[i-1]]; // Set bracket\r\n            console.log(b);\r\n            console.log('Taxable income: ' + g);\r\n            var tax = ((b.p*(g)) + b.s);\r\n            return {tax: Math.round(tax), taxableAmount: taxableAmount};\r\n        }    \r\n    }\r\n\r\n    return {tax: 0, taxableAmount: 0};\r\n }\r\n\r\nexport const calculate = (g, status) => {\r\n    const fed = calculateFed(g, status)\r\n    return {\r\n        income: g,\r\n        fed : fed,\r\n        totals: {\r\n            net: g - fed.tax,\r\n            netMonthly: Math.round((g - fed.tax) / 12),\r\n            tax: fed.tax\r\n        }\r\n    };    \r\n} ","import React from 'react';\r\n\r\nimport { InputLabel, FormControl, Container, CssBaseline, Avatar, Typography, TextField, Button, Grid, Table, TableHead, TableRow, TableBody, TableCell, InputAdornment, OutlinedInput } from '@material-ui/core';\r\nimport { calculate } from '../util/calcutil'\r\n\r\nclass CalculatorComponent extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handlechange = this.handlechange.bind(this);\r\n\r\n        this.state = calculate(100000, 'm');\r\n    }\r\n      \r\n    handlechange(event) {\r\n        this.setState(calculate(event.target.value, 'm'));\r\n    }\r\n\r\n    render() {\r\n      return (\r\n        <form className={this.props.useClasses.root} noValidate autoComplete=\"off\">\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\" align={'center'}>US Income Tax Calculator</Typography>    \r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <FormControl fullWidth className={this.props.useClasses.margin} variant=\"outlined\">\r\n                        <InputLabel htmlFor=\"outlined-adornment-amount\">Income Amount</InputLabel>\r\n                        <OutlinedInput\r\n                            id=\"outlined-income-amount\"\r\n                            value={this.state.income}\r\n                            onChange={this.handlechange}\r\n                            startAdornment={<InputAdornment position=\"start\">$</InputAdornment>}\r\n                            labelWidth={140}\r\n                            type=\"number\"\r\n                        />\r\n                    </FormControl>\r\n                    {/* <OutlinedInput style={{width: '100%'}} startAdornment={<InputAdornment position=\"start\">$</InputAdornment>} type=\"number\" id=\"outlined-basic\" label=\"Income amount $\" variant=\"outlined\" onChange={this.handlechange} value={this.state.income} /> */}\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <Table size=\"small\">\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} style={{fontWeight : 600}}>Federal Taxes</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                        <TableRow>\r\n                            <TableCell>Taxable Income</TableCell>\r\n                                <TableCell align=\"right\">{'$' + this.state.fed.taxableAmount}</TableCell>\r\n                            </TableRow>                            <TableRow>\r\n                                <TableCell>Federal Tax</TableCell>\r\n                                <TableCell align=\"right\">{'$' + this.state.fed.tax}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} style={{fontWeight : 600}}>California State Taxes</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Taxable Income</TableCell>\r\n                                <TableCell align=\"right\">{'$' + this.state.taxableAmount}</TableCell>\r\n                            </TableRow>                            <TableRow>\r\n                                <TableCell>Federal Tax</TableCell>\r\n                                <TableCell align=\"right\">{'$' + this.state.tax}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell colSpan={2} style={{fontWeight : 600}}>Totals</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell>Total Tax</TableCell>\r\n                                <TableCell align=\"right\">{'$' + this.state.totals.tax}</TableCell>\r\n                            </TableRow>                            \r\n                            <TableRow>\r\n                                <TableCell>Monthly Take-Home</TableCell>\r\n                                <TableCell align=\"right\">{'$' + this.state.totals.netMonthly}</TableCell>\r\n                            </TableRow>\r\n                            <TableRow>\r\n                                <TableCell style={{fontWeight : 600}}>Annual Take-Home</TableCell>\r\n                                <TableCell style={{fontWeight : 600}} align=\"right\">{'$' + this.state.totals.net}</TableCell>\r\n                            </TableRow>                            \r\n                        </TableBody>\r\n                    </Table>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n      );\r\n    }\r\n  }\r\n\r\nexport default CalculatorComponent;","import React from 'react';\nimport './App.css';\nimport { Container, CssBaseline, Avatar, Typography, TextField, Button, ThemeProvider } from '@material-ui/core';\nimport MonetizationOnRoundedIcon from '@material-ui/icons/MonetizationOnRounded';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport CalculatorComponent from './components/calculatorcomponent';\nimport 'fontsource-roboto';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    marginTop: theme.spacing(1)\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nfunction App() {\n  const classes = useStyles();\n  const theme = createMuiTheme({\n    typography: {\n      fontSize: 16,\n    },\n  });\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <MonetizationOnRoundedIcon />\n            </Avatar>\n            <CalculatorComponent useClasses={classes}/>\n          </div>\n      </Container>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}